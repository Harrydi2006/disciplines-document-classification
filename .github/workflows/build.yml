name: Release Build

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+*'
  workflow_dispatch:
    inputs:
      version:
        description: '版本号 (例如: v1.0.0)'
        required: true
        type: string

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
        
    - name: Get version
      id: get_version
      run: |
        if [ "${{ github.event_name }}" = "push" ]; then
          echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV
        else
          echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV
        fi
      shell: bash

    - name: Download dependencies for full version
      run: |
        # 创建依赖目录
        mkdir -p resources/dependencies
        
        # 下载 Tesseract
        Invoke-WebRequest -Uri "https://digi.bib.uni-mannheim.de/tesseract/tesseract-ocr-w64-setup-5.3.1.20230401.exe" -OutFile "resources/dependencies/tesseract-installer.exe"
        
        # 下载 FFmpeg
        Invoke-WebRequest -Uri "https://www.gyan.dev/ffmpeg/builds/ffmpeg-release-essentials.zip" -OutFile "resources/dependencies/ffmpeg.zip"
        
    - name: Build lite version
      run: |
        # 构建精简版（不包含依赖）
        python build.py
        # 重命名输出文件
        mv dist/FileClassifier.exe dist/FileClassifier-lite.exe
        
    - name: Build full version
      run: |
        # 构建完整版（包含依赖）
        python build.py --include-dependencies
        # 重命名输出文件
        mv dist/FileClassifier.exe dist/FileClassifier-full.exe
        
    - name: Generate changelog
      id: changelog
      run: |
        # 获取最近的两个标签
        CURRENT_TAG="${{ github.ref }}"
        PREVIOUS_TAG=$(git describe --tags --abbrev=0 "${CURRENT_TAG}^" 2>/dev/null || echo "")
        
        if [ -n "$PREVIOUS_TAG" ]; then
          # 如果存在前一个标签，获取两个标签之间的提交
          echo "CHANGELOG<<EOF" >> $GITHUB_ENV
          echo "### 更新内容" >> $GITHUB_ENV
          git log --pretty=format:"- %s" ${PREVIOUS_TAG}..${CURRENT_TAG} >> $GITHUB_ENV
          echo "" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
        else
          # 如果是第一个标签，获取所有提交
          echo "CHANGELOG<<EOF" >> $GITHUB_ENV
          echo "### 首次发布" >> $GITHUB_ENV
          git log --pretty=format:"- %s" >> $GITHUB_ENV
          echo "" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
        fi
      shell: bash
        
    - name: Create Release
      uses: softprops/action-gh-release@v2
      if: startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch'
      with:
        name: Release ${{ env.VERSION }}
        tag_name: v${{ env.VERSION }}
        body: |
          文件分类助手 v${{ env.VERSION }}
          
          ### 版本说明
          提供两个版本：
          1. 精简版（FileClassifier-lite.exe）
             - 仅包含程序本体
             - 首次运行时会自动下载所需依赖
             - 适合网络环境较好的用户
          
          2. 完整版（FileClassifier-full.exe）
             - 包含所有依赖（Tesseract OCR 和 FFmpeg）
             - 首次运行时自动安装依赖
             - 适合网络环境受限的用户
          
          ### 系统要求
          - Windows 10 或更高版本
          
          ${{ env.CHANGELOG }}
          
        files: |
          dist/FileClassifier-lite.exe
          dist/FileClassifier-full.exe
        draft: false
        prerelease: ${{ contains(env.VERSION, '-') }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Upload release artifacts
      uses: actions/upload-artifact@v4
      with:
        name: FileClassifier-${{ env.VERSION }}
        path: |
          dist/FileClassifier-lite.exe
          dist/FileClassifier-full.exe 