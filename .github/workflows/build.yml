name: Build EXE

on:
  workflow_dispatch:    # 手动触发
  push:
    branches:          # 推送到主分支时触发
      - master
      - main
    tags:             # 推送标签时触发
      - 'v*'
    paths:            # 当这些文件改变时触发
      - '**.py'
      - 'requirements.txt'
      - '.github/workflows/**'

permissions:
  contents: write     # 添加写入权限

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Get Version
      id: get_version
      run: |
        if ($env:GITHUB_REF -like 'refs/tags/*') {
          $VERSION = $env:GITHUB_REF -replace 'refs/tags/',''
        } else {
          $VERSION = "ci-$($env:GITHUB_SHA.Substring(0,7))"
        }
        echo "VERSION=$VERSION" >> $env:GITHUB_ENV
      shell: pwsh
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.11.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip uninstall -y pathlib  # 先卸载 pathlib
        pip install --no-cache-dir -r requirements.txt || (echo "Failed to install dependencies" && exit 1)
        pip install --no-cache-dir pyinstaller==6.3.0 || (echo "Failed to install PyInstaller" && exit 1)
    
    - name: Build EXE
      run: |
        python -c "import sys; print('Python version:', sys.version)" || exit 1
        python -c "import tkinter; print('Tkinter version:', tkinter.TkVersion)" || exit 1
        python -c "import tqdm; print('tqdm version:', tqdm.__version__)" || exit 1
        python -c "import win32gui; print('win32gui available')" || exit 1
        python build.py || (echo "Build failed" && exit 1)
    
    - name: Upload CI Build Artifact
      uses: actions/upload-artifact@v4
      if: "!startsWith(github.ref, 'refs/tags/')"
      with:
        name: FileClassifier-${{ env.VERSION }}
        path: dist/FileClassifier.exe
        retention-days: 30
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        name: FileClassifier ${{ env.VERSION }}
        files: |
          dist/FileClassifier.exe
        prerelease: false
        draft: false
        body: |
          文件分类助手 ${{ env.VERSION }}
          
          ### 更新内容
          - 自动构建发布版本
          
          ### 下载说明
          - 下载 FileClassifier.exe
          - 运行程序会自动创建必要的目录
          
          ### 环境要求
          - Windows 系统
          - Tesseract OCR
          - FFmpeg
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 